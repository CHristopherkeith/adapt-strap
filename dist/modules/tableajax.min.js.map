{"version":3,"file":"tableajax.min.js","sources":["tableajax/tableajax.js"],"names":["angular","module","provider","defaults","this","expandIconClass","collapseIconClass","loadingIconClass","$get","settings","directive","$parse","$http","$compile","$filter","$templateCache","$adPaging","adStrapUtils","_link","scope","element","attrs","tableName","items","list","undefined","paging","currentPage","totalPages","pageSize","pageSizes","localConfig","pagingArray","disablePaging","ajaxConfig","$eval","applyFilter","tableModels","mainTemplate","get","loadPage","page","then","response","loadNextPage","loadPreviousPage","pageSizeChanged","size","tableClasses","paginationClasses","replace","columnDefinition","html","restrict","link"],"mappings":"AAOAA,QAAQC,OAAO,kCAAmCC,SAAS,aAAc,WACvE,GAAIC,GAAWC,KAAKD,UAChBE,gBAAiB,gCACjBC,kBAAmB,iCACnBC,iBAAkB,sCAEtBH,MAAKI,KAAO,WACV,OAASC,SAAUN,MAEpBO,UAAU,eACX,SACA,QACA,WACA,UACA,iBACA,YACA,eACA,SAAUC,EAAQC,EAAOC,EAAUC,EAASC,EAAgBC,EAAWC,GACrE,YACA,SAASC,GAAMC,EAAOC,EAASC,GAG7BF,EAAME,EAAMC,YACVC,OACEC,KAAMC,OACNC,QACEC,YAAa,EACbC,WAAYH,OACZI,SAAUJ,OACVK,UAAWnB,EAAOU,EAAMS,eACtB,GACA,GACA,MAINC,aACEC,eACAC,eAAe,GAEjBC,WAAYf,EAAMgB,MAAMd,EAAMa,YAC9BE,YAAanB,EAAamB,YAG5B,IAAIC,GAAclB,EAAME,EAAMC,WAAYgB,EAAevB,EAAewB,IAAI,+BAC5EF,GAAYd,MAAMG,OAAOG,SAAWQ,EAAYd,MAAMG,OAAOI,UAAU,GAEvEO,EAAYG,SAAW,SAAUC,GAC1BJ,EAAYN,YAAYE,gBAC3BI,EAAYN,YAAYE,eAAgB,EACxCjB,EAAUwB,SAASC,EAAMJ,EAAYd,MAAMG,OAAOG,SAAUQ,EAAYH,YAAYQ,KAAK,SAAUC,GACjGN,EAAYd,MAAMC,KAAOmB,EAASpB,MAClCc,EAAYd,MAAMG,OAAOE,WAAae,EAASf,WAC/CS,EAAYd,MAAMG,OAAOC,YAAcgB,EAAShB,YAChDU,EAAYN,YAAYC,YAAcW,EAASX,YAC/CK,EAAYN,YAAYE,eAAgB,GACvC,WACDI,EAAYN,YAAYE,eAAgB,MAI9CI,EAAYO,aAAe,WACrBP,EAAYd,MAAMG,OAAOC,YAAc,GAAKU,EAAYd,MAAMG,OAAOE,YACvES,EAAYG,SAASH,EAAYd,MAAMG,OAAOC,YAAc,IAGhEU,EAAYQ,iBAAmB,WACzBR,EAAYd,MAAMG,OAAOC,YAAc,EAAI,GAC7CU,EAAYG,SAASH,EAAYd,MAAMG,OAAOC,YAAc,IAGhEU,EAAYS,gBAAkB,SAAUC,GACtCV,EAAYd,MAAMG,OAAOG,SAAWkB,EACpCV,EAAYG,SAAS,IAIvBH,EAAYG,SAAS,GACrBnB,EAAM2B,aAAe3B,EAAM2B,cAAgB,QAC3C3B,EAAM4B,kBAAoB5B,EAAM4B,mBAAqB,aACrDX,EAAeA,EAAaY,QAAQ,gBAAiB7B,EAAMC,WAAW4B,QAAQ,uBAAwB7B,EAAM8B,kBAAkBD,QAAQ,mBAAoB7B,EAAM2B,cAAcE,QAAQ,wBAAyB7B,EAAM4B,mBACrNjD,QAAQoB,QAAQA,GAASgC,KAAKvC,EAASyB,GAAcnB,IAEvD,OACEkC,SAAU,IACVC,KAAMpC","sourcesContent":["angular.module('adaptv.adaptStrap.tableajax', [])\n  .provider('$tableajax', function () {\n    var defaults = this.defaults = {\n      expandIconClass: 'glyphicon glyphicon-plus-sign',\n      collapseIconClass: 'glyphicon glyphicon-minus-sign',\n      loadingIconClass: 'glyphicon glyphicon-refresh ad-spin'\n    };\n    this.$get = function () {\n      return {\n        settings: defaults\n      };\n    };\n  })\n\n/**\n * Use this directive if you need to render a table that loads data from ajax.\n */\n  .directive('adTableAjax', ['$parse', '$http', '$compile', '$filter', '$templateCache', '$adPaging', 'adStrapUtils',\n    function ($parse, $http, $compile, $filter, $templateCache, $adPaging, adStrapUtils) {\n      'use strict';\n      function _link(scope, element, attrs) {\n        // We do the name spacing so the if there are multiple adap-table-lite on the scope,\n        // they don't fight with each other.\n        scope[attrs.tableName] = {\n          items: {\n            list: undefined,\n            paging: {\n              currentPage: 1,\n              totalPages: undefined,\n              pageSize: undefined,\n              pageSizes: $parse(attrs.pageSizes)() || [10, 25, 50]\n            }\n          },\n          localConfig: {\n            pagingArray: [],\n            disablePaging: false\n          },\n          ajaxConfig: scope.$eval(attrs.ajaxConfig),\n          applyFilter: adStrapUtils.applyFilter\n        };\n\n        // ---------- Local data ---------- //\n        var tableModels = scope[attrs.tableName],\n          mainTemplate = $templateCache.get('tableajax/tableajax.tpl.html');\n        tableModels.items.paging.pageSize = tableModels.items.paging.pageSizes[0];\n\n        // ---------- ui handlers ---------- //\n        tableModels.loadPage = function (page) {\n          if (!tableModels.localConfig.disablePaging) {\n            tableModels.localConfig.disablePaging = true;\n            $adPaging.loadPage(page, tableModels.items.paging.pageSize, tableModels.ajaxConfig).then(\n              function (response) {\n                tableModels.items.list = response.items;\n                tableModels.items.paging.totalPages = response.totalPages;\n                tableModels.items.paging.currentPage = response.currentPage;\n                tableModels.localConfig.pagingArray = response.pagingArray;\n                tableModels.localConfig.disablePaging = false;\n              },\n              function () {\n                tableModels.localConfig.disablePaging = false;\n              }\n            );\n          }\n        };\n\n        tableModels.loadNextPage = function () {\n          if (tableModels.items.paging.currentPage + 1 <= tableModels.items.paging.totalPages) {\n            tableModels.loadPage(tableModels.items.paging.currentPage + 1);\n          }\n        };\n\n        tableModels.loadPreviousPage = function () {\n          if (tableModels.items.paging.currentPage - 1 > 0) {\n            tableModels.loadPage(tableModels.items.paging.currentPage - 1);\n          }\n        };\n\n        tableModels.pageSizeChanged = function (size) {\n          tableModels.items.paging.pageSize = size;\n          tableModels.loadPage(1);\n        };\n\n        // ---------- initialization and event listeners ---------- //\n        //We do the compile after injecting the name spacing into the template.\n        tableModels.loadPage(1);\n\n        attrs.tableClasses = attrs.tableClasses || 'table';\n        attrs.paginationClasses = attrs.paginationClasses || 'pagination';\n        mainTemplate = mainTemplate.replace(/%=tableName%/g, attrs.tableName).\n          replace(/%=columnDefinition%/g, attrs.columnDefinition).\n          replace(/%=tableClasses%/g, attrs.tableClasses).\n          replace(/%=paginationClasses%/g, attrs.paginationClasses);\n        angular.element(element).html($compile(mainTemplate)(scope));\n      }\n\n      return {\n        restrict: 'E',\n        link: _link\n      };\n    }]);\n"],"sourceRoot":"/source/"}