{"version":3,"file":"tableajax.min.js","sources":["tableajax/tableajax.js"],"names":["angular","module","directive","$parse","$compile","$templateCache","$adConfig","adLoadPage","adDebounce","adStrapUtils","_link","scope","element","attrs","tableName","items","list","undefined","paging","currentPage","totalPages","pageSize","pageSizes","localConfig","pagingArray","loadingData","ajaxConfig","$eval","applyFilter","lastRequestToken","tableModels","mainTemplate","get","loadPage","page","Math","random","field","predicate","reverse","then","response","identityToken","loadNextPage","loadPreviousPage","loadLastPage","pageSizeChanged","size","Number","sortByColumn","column","sortKey","$watch","tableClasses","paginationBtnGroupClasses","replace","columnDefinition","iconClasses","firstPage","previousPage","nextPage","lastPage","sortAscending","sortDescending","sortable","empty","append","restrict","link"],"mappings":"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","sourcesContent":["angular.module('adaptv.adaptStrap.tableajax', ['adaptv.adaptStrap.utils', 'adaptv.adaptStrap.loadingindicator'])\n/**\n * Use this directive if you need to render a table that loads data from ajax.\n */\n  .directive('adTableAjax',\n  ['$parse', '$compile', '$templateCache', '$adConfig', 'adLoadPage', 'adDebounce', 'adStrapUtils',\n    function ($parse, $compile, $templateCache, $adConfig, adLoadPage, adDebounce, adStrapUtils) {\n      'use strict';\n      function _link(scope, element, attrs) {\n        // We do the name spacing so the if there are multiple adap-table-lite on the scope,\n        // they don't fight with each other.\n        scope[attrs.tableName] = {\n          items: {\n            list: undefined,\n            paging: {\n              currentPage: 1,\n              totalPages: undefined,\n              pageSize: undefined,\n              pageSizes: $parse(attrs.pageSizes)() || [10, 25, 50]\n            }\n          },\n          localConfig: {\n            pagingArray: [],\n            loadingData: false\n          },\n          ajaxConfig: scope.$eval(attrs.ajaxConfig),\n          applyFilter: adStrapUtils.applyFilter\n        };\n\n        // ---------- Local data ---------- //\n        var tableModels = scope[attrs.tableName],\n          mainTemplate = $templateCache.get('tableajax/tableajax.tpl.html'),\n          lastRequestToken;\n        tableModels.items.paging.pageSize = tableModels.items.paging.pageSizes[0];\n\n        // ---------- ui handlers ---------- //\n        tableModels.loadPage = adDebounce(function (page) {\n          lastRequestToken = Math.random();\n          tableModels.localConfig.loadingData = true;\n          adLoadPage(\n            page,\n            tableModels.items.paging.pageSize,\n            {field: tableModels.localConfig.predicate, reverse: tableModels.localConfig.reverse},\n            tableModels.ajaxConfig,\n            lastRequestToken\n          ).then(\n            function (response) {\n              if (response.identityToken === lastRequestToken) {\n                tableModels.items.list = response.items;\n                tableModels.items.paging.totalPages = response.totalPages;\n                tableModels.items.paging.currentPage = response.currentPage;\n                tableModels.localConfig.pagingArray = response.pagingArray;\n                tableModels.localConfig.loadingData = false;\n              }\n            },\n            function () {\n              tableModels.localConfig.loadingData = false;\n            }\n          );\n        });\n\n        tableModels.loadNextPage = function () {\n          if (!tableModels.localConfig.loadingData) {\n            if (tableModels.items.paging.currentPage + 1 <= tableModels.items.paging.totalPages) {\n              tableModels.loadPage(tableModels.items.paging.currentPage + 1);\n            }\n          }\n        };\n\n        tableModels.loadPreviousPage = function () {\n          if (!tableModels.localConfig.loadingData) {\n            if (tableModels.items.paging.currentPage - 1 > 0) {\n              tableModels.loadPage(tableModels.items.paging.currentPage - 1);\n            }\n          }\n        };\n\n        tableModels.loadLastPage = function () {\n          if (!tableModels.localConfig.loadingData) {\n            if (tableModels.items.paging.currentPage !== tableModels.items.paging.totalPages) {\n              tableModels.loadPage(tableModels.items.paging.totalPages);\n            }\n          }\n        };\n\n        tableModels.pageSizeChanged = function (size) {\n          if (Number(size) !== tableModels.items.paging.pageSize) {\n            tableModels.items.paging.pageSize = Number(size);\n            tableModels.loadPage(1);\n          }\n        };\n\n        tableModels.sortByColumn = function (column) {\n          if (column.sortKey) {\n            if (column.sortKey !== tableModels.localConfig.predicate) {\n              tableModels.localConfig.predicate = column.sortKey;\n              tableModels.localConfig.reverse = true;\n            } else {\n              if (tableModels.localConfig.reverse === true) {\n                tableModels.localConfig.reverse = false;\n              } else {\n                tableModels.localConfig.reverse = undefined;\n                tableModels.localConfig.predicate = undefined;\n              }\n            }\n            tableModels.loadPage(tableModels.items.paging.currentPage);\n          }\n        };\n\n        // ---------- initialization and event listeners ---------- //\n        //We do the compile after injecting the name spacing into the template.\n        tableModels.loadPage(1);\n\n        // reset on parameter change\n        scope.$watch(attrs.ajaxConfig, function () {\n          tableModels.loadPage(1);\n        }, true);\n\n        attrs.tableClasses = attrs.tableClasses || 'table';\n        attrs.paginationBtnGroupClasses = attrs.paginationBtnGroupClasses || 'btn-group btn-group-sm';\n        mainTemplate = mainTemplate.replace(/%=tableName%/g, attrs.tableName).\n          replace(/%=columnDefinition%/g, attrs.columnDefinition).\n          replace(/%=tableClasses%/g, attrs.tableClasses).\n          replace(/%=paginationBtnGroupClasses%/g, attrs.paginationBtnGroupClasses).\n          replace(/%=icon-firstPage%/g, $adConfig.iconClasses.firstPage).\n          replace(/%=icon-previousPage%/g, $adConfig.iconClasses.previousPage).\n          replace(/%=icon-nextPage%/g, $adConfig.iconClasses.nextPage).\n          replace(/%=icon-lastPage%/g, $adConfig.iconClasses.lastPage).\n          replace(/%=icon-sortAscending%/g, $adConfig.iconClasses.sortAscending).\n          replace(/%=icon-sortDescending%/g, $adConfig.iconClasses.sortDescending).\n          replace(/%=icon-sortable%/g, $adConfig.iconClasses.sortable)\n        ;\n        element.empty();\n        element.append($compile(mainTemplate)(scope));\n      }\n\n      return {\n        restrict: 'E',\n        link: _link\n      };\n    }]);\n"],"sourceRoot":"/source/"}