{"version":3,"file":"tableajax.min.js","sources":["tableajax/tableajax.js"],"names":["angular","module","provider","defaults","this","expandIconClass","collapseIconClass","loadingIconClass","$get","settings","directive","$q","$http","$compile","$filter","$templateCache","$adPaging","adStrapUtils","_link","scope","element","attrs","tableName","items","list","undefined","paging","currentPage","totalPages","pageSize","localConfig","pagingArray","ajaxConfig","$eval","applyFilter","tableModels","mainTemplate","get","loadPage","page","then","response","loadNextPage","loadPreviousPage","tableClasses","replace","columnDefinition","html","restrict","link"],"mappings":"AAOAA,QAAQC,OAAO,kCAAmCC,SAAS,aAAc,WACvE,GAAIC,GAAWC,KAAKD,UAChBE,gBAAiB,gCACjBC,kBAAmB,iCACnBC,iBAAkB,sCAEtBH,MAAKI,KAAO,WACV,OAASC,SAAUN,MAEpBO,UAAU,eACX,KACA,QACA,WACA,UACA,iBACA,YACA,eACA,SAAUC,EAAIC,EAAOC,EAAUC,EAASC,EAAgBC,EAAWC,GACjE,YACA,SAASC,GAAMC,EAAOC,EAASC,GAG7BF,EAAME,EAAMC,YACVC,OACEC,KAAMC,OACNC,QACEC,YAAa,EACbC,WAAYH,OACZI,SAAU,IAGdC,aAAeC,gBACfC,WAAYb,EAAMc,MAAMZ,EAAMW,YAC9BE,YAAajB,EAAaiB,YAG5B,IAAIC,GAAchB,EAAME,EAAMC,WAAYc,EAAerB,EAAesB,IAAI,+BAE5EF,GAAYG,SAAW,SAAUC,GAC/BvB,EAAUsB,SAASC,EAAMJ,EAAYZ,MAAMG,OAAOG,SAAUM,EAAYH,YAAYQ,KAAK,SAAUC,GACjGN,EAAYZ,MAAMC,KAAOiB,EAASlB,MAClCY,EAAYZ,MAAMG,OAAOE,WAAaa,EAASb,WAC/CO,EAAYZ,MAAMG,OAAOC,YAAcc,EAASd,YAChDQ,EAAYL,YAAYC,YAAcU,EAASV,eAGnDI,EAAYO,aAAe,WACrBP,EAAYZ,MAAMG,OAAOC,YAAc,GAAKQ,EAAYZ,MAAMG,OAAOE,YACvEO,EAAYG,SAASH,EAAYZ,MAAMG,OAAOC,YAAc,IAGhEQ,EAAYQ,iBAAmB,WACzBR,EAAYZ,MAAMG,OAAOC,YAAc,EAAI,GAC7CQ,EAAYG,SAASH,EAAYZ,MAAMG,OAAOC,YAAc,IAKhEQ,EAAYG,SAAS,GACrBjB,EAAMuB,aAAevB,EAAMuB,cAAgB,QAC3CR,EAAeA,EAAaS,QAAQ,gBAAiBxB,EAAMC,WAAWuB,QAAQ,uBAAwBxB,EAAMyB,kBAAkBD,QAAQ,mBAAoBxB,EAAMuB,cAChK5C,QAAQoB,QAAQA,GAAS2B,KAAKlC,EAASuB,GAAcjB,IAEvD,OACE6B,SAAU,IACVC,KAAM/B","sourcesContent":["angular.module('adaptv.adaptStrap.tableajax', [])\n  .provider('$tableajax', function () {\n    var defaults = this.defaults = {\n      expandIconClass: 'glyphicon glyphicon-plus-sign',\n      collapseIconClass: 'glyphicon glyphicon-minus-sign',\n      loadingIconClass: 'glyphicon glyphicon-refresh ad-spin'\n    };\n    this.$get = function () {\n      return {\n        settings: defaults\n      };\n    };\n  })\n\n/**\n * Use this directive if you need to render a table that loads data from ajax.\n */\n  .directive('adTableAjax', ['$q', '$http', '$compile', '$filter', '$templateCache', '$adPaging', 'adStrapUtils',\n    function ($q, $http, $compile, $filter, $templateCache, $adPaging, adStrapUtils) {\n      'use strict';\n      function _link(scope, element, attrs) {\n        // We do the name spacing so the if there are multiple adap-table-lite on the scope,\n        // they don't fight with each other.\n        scope[attrs.tableName] = {\n          items: {\n            list: undefined,\n            paging: {\n              currentPage: 1,\n              totalPages: undefined,\n              pageSize: 5\n            }\n          },\n          localConfig: {\n            pagingArray: []\n          },\n          ajaxConfig: scope.$eval(attrs.ajaxConfig),\n          applyFilter: adStrapUtils.applyFilter\n        };\n\n        // ---------- Local data ---------- //\n        var tableModels = scope[attrs.tableName],\n          mainTemplate = $templateCache.get('tableajax/tableajax.tpl.html');\n\n        // ---------- ui handlers ---------- //\n        tableModels.loadPage = function (page) {\n          $adPaging.loadPage(page, tableModels.items.paging.pageSize, tableModels.ajaxConfig).then(\n            function (response) {\n              tableModels.items.list = response.items;\n              tableModels.items.paging.totalPages = response.totalPages;\n              tableModels.items.paging.currentPage = response.currentPage;\n              tableModels.localConfig.pagingArray = response.pagingArray;\n            }\n          );\n        };\n\n        tableModels.loadNextPage = function () {\n          if (tableModels.items.paging.currentPage + 1 <= tableModels.items.paging.totalPages) {\n            tableModels.loadPage(tableModels.items.paging.currentPage + 1);\n          }\n        };\n\n        tableModels.loadPreviousPage = function () {\n          if (tableModels.items.paging.currentPage - 1 > 0) {\n            tableModels.loadPage(tableModels.items.paging.currentPage - 1);\n          }\n        };\n\n        // ---------- initialization and event listeners ---------- //\n        //We do the compile after injecting the name spacing into the template.\n        tableModels.loadPage(1);\n\n        attrs.tableClasses = attrs.tableClasses || 'table';\n        mainTemplate = mainTemplate.replace(/%=tableName%/g, attrs.tableName).\n          replace(/%=columnDefinition%/g, attrs.columnDefinition).\n          replace(/%=tableClasses%/g, attrs.tableClasses);\n        angular.element(element).html($compile(mainTemplate)(scope));\n      }\n\n      return {\n        restrict: 'E',\n        link: _link\n      };\n    }]);\n"],"sourceRoot":"/source/"}