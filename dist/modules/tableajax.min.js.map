{"version":3,"file":"tableajax.min.js","sources":["tableajax/tableajax.js"],"names":["angular","module","directive","$parse","$compile","$templateCache","$adConfig","adLoadPage","adDebounce","adStrapUtils","_link","scope","element","attrs","tableName","items","list","undefined","paging","currentPage","totalPages","pageSize","pageSizes","localConfig","pagingArray","loadingData","ajaxConfig","$eval","applyFilter","lastRequestToken","tableModels","mainTemplate","get","loadPage","page","Math","random","pageLoader","params","pageNumber","sortKey","predicate","sortDirection","reverse","token","successHandler","response","errorHandler","then","loadNextPage","loadPreviousPage","loadLastPage","pageSizeChanged","size","Number","sortByColumn","column","$watch","tableClasses","paginationBtnGroupClasses","replace","columnDefinition","iconClasses","firstPage","previousPage","nextPage","lastPage","sortAscending","sortDescending","sortable","empty","append","restrict","link"],"mappings":"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","sourcesContent":["angular.module('adaptv.adaptStrap.tableajax', ['adaptv.adaptStrap.utils', 'adaptv.adaptStrap.loadingindicator'])\n/**\n * Use this directive if you need to render a table that loads data from ajax.\n */\n  .directive('adTableAjax',\n  ['$parse', '$compile', '$templateCache', '$adConfig', 'adLoadPage', 'adDebounce', 'adStrapUtils',\n    function ($parse, $compile, $templateCache, $adConfig, adLoadPage, adDebounce, adStrapUtils) {\n      'use strict';\n      function _link(scope, element, attrs) {\n        // We do the name spacing so the if there are multiple adap-table-lite on the scope,\n        // they don't fight with each other.\n        scope[attrs.tableName] = {\n          items: {\n            list: undefined,\n            paging: {\n              currentPage: 1,\n              totalPages: undefined,\n              pageSize: undefined,\n              pageSizes: $parse(attrs.pageSizes)() || [10, 25, 50]\n            }\n          },\n          localConfig: {\n            pagingArray: [],\n            loadingData: false\n          },\n          ajaxConfig: scope.$eval(attrs.ajaxConfig),\n          applyFilter: adStrapUtils.applyFilter\n        };\n\n        // ---------- Local data ---------- //\n        var tableModels = scope[attrs.tableName],\n          mainTemplate = $templateCache.get('tableajax/tableajax.tpl.html'),\n          lastRequestToken;\n        tableModels.items.paging.pageSize = tableModels.items.paging.pageSizes[0];\n\n        // ---------- ui handlers ---------- //\n        tableModels.loadPage = adDebounce(function (page) {\n          lastRequestToken = Math.random();\n          tableModels.localConfig.loadingData = true;\n          var pageLoader = scope.$eval(attrs.pageLoader) || adLoadPage,\n            params = {\n              pageNumber: page,\n              pageSize: tableModels.items.paging.pageSize,\n              sortKey: tableModels.localConfig.predicate,\n              sortDirection: tableModels.localConfig.reverse,\n              ajaxConfig: tableModels.ajaxConfig,\n              token: lastRequestToken\n            },\n            successHandler = function (response) {\n              if (response.token === lastRequestToken) {\n                tableModels.items.list = response.items;\n                tableModels.items.paging.totalPages = response.totalPages;\n                tableModels.items.paging.currentPage = response.currentPage;\n                tableModels.localConfig.pagingArray = response.pagingArray;\n                tableModels.localConfig.loadingData = false;\n              }\n            },\n            errorHandler = function () {\n              tableModels.localConfig.loadingData = false;\n            };\n\n          pageLoader(params).then(successHandler, errorHandler);\n        });\n\n        tableModels.loadNextPage = function () {\n          if (!tableModels.localConfig.loadingData) {\n            if (tableModels.items.paging.currentPage + 1 <= tableModels.items.paging.totalPages) {\n              tableModels.loadPage(tableModels.items.paging.currentPage + 1);\n            }\n          }\n        };\n\n        tableModels.loadPreviousPage = function () {\n          if (!tableModels.localConfig.loadingData) {\n            if (tableModels.items.paging.currentPage - 1 > 0) {\n              tableModels.loadPage(tableModels.items.paging.currentPage - 1);\n            }\n          }\n        };\n\n        tableModels.loadLastPage = function () {\n          if (!tableModels.localConfig.loadingData) {\n            if (tableModels.items.paging.currentPage !== tableModels.items.paging.totalPages) {\n              tableModels.loadPage(tableModels.items.paging.totalPages);\n            }\n          }\n        };\n\n        tableModels.pageSizeChanged = function (size) {\n          if (Number(size) !== tableModels.items.paging.pageSize) {\n            tableModels.items.paging.pageSize = Number(size);\n            tableModels.loadPage(1);\n          }\n        };\n\n        tableModels.sortByColumn = function (column) {\n          if (column.sortKey) {\n            if (column.sortKey !== tableModels.localConfig.predicate) {\n              tableModels.localConfig.predicate = column.sortKey;\n              tableModels.localConfig.reverse = true;\n            } else {\n              if (tableModels.localConfig.reverse === true) {\n                tableModels.localConfig.reverse = false;\n              } else {\n                tableModels.localConfig.reverse = undefined;\n                tableModels.localConfig.predicate = undefined;\n              }\n            }\n            tableModels.loadPage(tableModels.items.paging.currentPage);\n          }\n        };\n\n        // ---------- initialization and event listeners ---------- //\n        //We do the compile after injecting the name spacing into the template.\n        tableModels.loadPage(1);\n\n        // reset on parameter change\n        scope.$watch(attrs.ajaxConfig, function () {\n          tableModels.loadPage(1);\n        }, true);\n\n        attrs.tableClasses = attrs.tableClasses || 'table';\n        attrs.paginationBtnGroupClasses = attrs.paginationBtnGroupClasses || 'btn-group btn-group-sm';\n        mainTemplate = mainTemplate.replace(/%=tableName%/g, attrs.tableName).\n          replace(/%=columnDefinition%/g, attrs.columnDefinition).\n          replace(/%=tableClasses%/g, attrs.tableClasses).\n          replace(/%=paginationBtnGroupClasses%/g, attrs.paginationBtnGroupClasses).\n          replace(/%=icon-firstPage%/g, $adConfig.iconClasses.firstPage).\n          replace(/%=icon-previousPage%/g, $adConfig.iconClasses.previousPage).\n          replace(/%=icon-nextPage%/g, $adConfig.iconClasses.nextPage).\n          replace(/%=icon-lastPage%/g, $adConfig.iconClasses.lastPage).\n          replace(/%=icon-sortAscending%/g, $adConfig.iconClasses.sortAscending).\n          replace(/%=icon-sortDescending%/g, $adConfig.iconClasses.sortDescending).\n          replace(/%=icon-sortable%/g, $adConfig.iconClasses.sortable)\n        ;\n        element.empty();\n        element.append($compile(mainTemplate)(scope));\n      }\n\n      return {\n        restrict: 'E',\n        link: _link\n      };\n    }]);\n"],"sourceRoot":"/source/"}