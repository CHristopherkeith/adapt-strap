{"version":3,"file":"utils.min.js","sources":["utils/utils.js"],"names":["angular","module","factory","$filter","evalObjectProperty","obj","property","arr","split","length","shift","applyFilter","value","filter","parts","filterOptions","$timeout","$q","deb","func","delay","immediate","ctx","timer","deferred","defer","wait","context","this","args","arguments","callNow","later","resolve","apply","cancel","promise","$adConfig","$http","adStrapUtils","pageToLoad","pageSize","ajaxConfigOriginal","identityToken","i","startPagingPage","success","err","start","pagingConfig","copy","paging","ajaxConfig","paginationConfig","request","extend","response","params","page","res","items","itemsLocation","currentPage","totalPages","Math","ceil","totalItems","pagingArray","push","error","reject","method","jsonp","url"],"mappings":"AAOAA,QAAQC,OAAO,8BAA+BC,QAAQ,gBACpD,UACA,SAAUC,GACR,OACEC,mBAAoB,SAAUC,EAAKC,GACjC,GAAIC,GAAMD,EAASE,MAAM,IACzB,IAAIH,EACF,KAAOE,EAAIE,QACLJ,IACFA,EAAMA,EAAIE,EAAIG,SAIpB,OAAOL,IAETM,YAAa,SAAUC,EAAOC,GAC5B,GAAIC,GAAOC,CAUX,OATIF,KACFC,EAAQD,EAAOL,MAAM,KACrBO,EAAgBD,EAAM,GAEpBF,EADEG,EACMZ,EAAQW,EAAM,IAAIF,EAAOG,GAEzBZ,EAAQW,EAAM,IAAIF,IAGvBA,OAIZV,QAAQ,cACT,WACA,KACA,SAAUc,EAAUC,GAClB,YACA,IAAIC,GAAM,SAAUC,EAAMC,EAAOC,EAAWC,GAC1C,GAAIC,GAAQ,KAAMC,EAAWP,EAAGQ,QAASC,EAAON,GAAS,GACzD,OAAO,YACL,GAAIO,GAAUL,GAAOM,KAAMC,EAAOC,UAAWC,EAAUV,IAAcE,EAAOS,EAAQ,WAC3EX,IACHG,EAASS,QAAQd,EAAKe,MAAMP,EAASE,IACrCL,EAAWP,EAAGQ,SAWpB,OARIF,IACFP,EAASmB,OAAOZ,GAElBA,EAAQP,EAASgB,EAAON,GACpBK,IACFP,EAASS,QAAQd,EAAKe,MAAMP,EAASE,IACrCL,EAAWP,EAAGQ,SAETD,EAASY,SAGpB,OAAOlB,MAERhB,QAAQ,cACT,YACA,KACA,QACA,eACA,SAAUmC,EAAWpB,EAAIqB,EAAOC,GAC9B,MAAO,UAAUC,EAAYC,EAAUC,EAAoBC,GACzD,GAAyCC,GAAGC,EAAiBC,EAASC,EAAlEC,GAASR,EAAa,GAAKC,EAA4ChB,EAAQR,EAAGQ,QAASwB,EAAejD,QAAQkD,KAAKb,EAAUc,QAASC,EAAapD,QAAQkD,KAAKR,EAkCxK,OAjCIU,GAAWC,kBAAoBD,EAAWC,iBAAiBC,SAC7DtD,QAAQuD,OAAON,EAAaK,QAASF,EAAWC,iBAAiBC,SAE/DF,EAAWC,kBAAoBD,EAAWC,iBAAiBG,UAC7DxD,QAAQuD,OAAON,EAAaO,SAAUJ,EAAWC,iBAAiBG,UAEpEJ,EAAWK,OAAOR,EAAaK,QAAQN,OAASA,EAChDI,EAAWK,OAAOR,EAAaK,QAAQb,UAAYA,EACnDW,EAAWK,OAAOR,EAAaK,QAAQI,MAAQlB,EAC/CM,EAAU,SAAUa,GAClB,GAAIH,IACAI,MAAOrB,EAAanC,mBAAmBuD,EAAKV,EAAaO,SAASK,eAClEC,YAAatB,EACbuB,WAAYC,KAAKC,KAAK1B,EAAanC,mBAAmBuD,EAAKV,EAAaO,SAASU,YAAczB,GAC/F0B,eACAxB,cAAeA,EAGnB,KADAE,EAAkBmB,KAAKC,KAAKzB,EAAaC,GAAYA,GAAYA,EAAW,GACvEG,EAAI,EAAO,EAAJA,EAAOA,IACbC,EAAkBD,EAAI,GAAKC,EAAkBD,GAAKY,EAASO,YAC7DP,EAASW,YAAYC,KAAKvB,EAAkBD,EAGhDnB,GAAMQ,QAAQuB,IAEhBT,EAAM,SAAUsB,GACd5C,EAAM6C,OAAOD,IAEW,UAAtBjB,EAAWmB,OACbjC,EAAMkC,MAAMpB,EAAWqB,IAAM,0BAA2BrB,GAAYN,QAAQA,GAASuB,MAAMtB,GAE3FT,EAAMc,GAAYN,QAAQA,GAASuB,MAAMtB,GAEpCtB,EAAMW","sourcesContent":["angular.module('adaptv.adaptStrap.utils', [])\n  .factory('adStrapUtils', ['$filter', function ($filter) {\n    return {\n      evalObjectProperty: function (obj, property) {\n        var arr = property.split('.');\n        if (obj) {\n          while (arr.length) {\n            if (obj) {\n              obj = obj[arr.shift()];\n            }\n          }\n        }\n        return obj;\n      },\n      applyFilter: function (value, filter) {\n        var parts,\n          filterOptions;\n        if (filter) {\n          parts = filter.split(':');\n          filterOptions = parts[1];\n          if (filterOptions) {\n            value = $filter(parts[0])(value, filterOptions);\n          } else {\n            value = $filter(parts[0])(value);\n          }\n        }\n        return value;\n      }\n    };\n  }])\n  .factory('adDebounce', ['$timeout', '$q', function ($timeout, $q) {\n    'use strict';\n    var deb = function (func, delay, immediate, ctx) {\n      var timer = null,\n        deferred = $q.defer(),\n        wait = delay || 300;\n      return function () {\n        var context = ctx || this,\n          args = arguments,\n          callNow = immediate && !timer,\n          later = function () {\n            if (!immediate) {\n              deferred.resolve(func.apply(context, args));\n              deferred = $q.defer();\n            }\n          };\n        if (timer) {\n          $timeout.cancel(timer);\n        }\n        timer = $timeout(later, wait);\n        if (callNow) {\n          deferred.resolve(func.apply(context, args));\n          deferred = $q.defer();\n        }\n        return deferred.promise;\n      };\n    };\n\n    return deb;\n  }])\n  .factory('adLoadPage', ['$adConfig', '$q', '$http', 'adStrapUtils', function ($adConfig, $q, $http, adStrapUtils) {\n    return function (pageToLoad, pageSize, ajaxConfigOriginal, identityToken) {\n      var start = (pageToLoad - 1) * pageSize,\n        i,\n        startPagingPage,\n        success,\n        err,\n        defer = $q.defer(),\n        pagingConfig = angular.copy($adConfig.paging),\n        ajaxConfig = angular.copy(ajaxConfigOriginal);\n\n      if (ajaxConfig.paginationConfig && ajaxConfig.paginationConfig.request) {\n        angular.extend(pagingConfig.request, ajaxConfig.paginationConfig.request);\n      }\n      if (ajaxConfig.paginationConfig && ajaxConfig.paginationConfig.response) {\n        angular.extend(pagingConfig.response, ajaxConfig.paginationConfig.response);\n      }\n\n      ajaxConfig.params[pagingConfig.request.start] = start;\n      ajaxConfig.params[pagingConfig.request.pageSize] = pageSize;\n      ajaxConfig.params[pagingConfig.request.page] = pageToLoad;\n\n      success = function (res) {\n        var response = {\n          items: adStrapUtils.evalObjectProperty(res, pagingConfig.response.itemsLocation),\n          currentPage: pageToLoad,\n          totalPages: Math.ceil(\n              adStrapUtils.evalObjectProperty(res, pagingConfig.response.totalItems) /\n              pageSize\n          ),\n          pagingArray: [],\n          identityToken: identityToken\n        };\n        startPagingPage = (Math.ceil(pageToLoad / pageSize) * pageSize) - (pageSize - 1);\n        for (i = 0; i < 5; i++) {\n          if (startPagingPage + i > 0 && startPagingPage + i <= response.totalPages) {\n            response.pagingArray.push(startPagingPage + i);\n          }\n        }\n        defer.resolve(response);\n      };\n\n      err = function (error) {\n        defer.reject(error);\n      };\n\n      if (ajaxConfig.method === 'JSONP') {\n        $http.jsonp(ajaxConfig.url + '?callback=JSON_CALLBACK', ajaxConfig).success(success).error(err);\n      } else {\n        $http(ajaxConfig).success(success).error(err);\n      }\n      return defer.promise;\n    };\n  }]);\n"],"sourceRoot":"/source/"}