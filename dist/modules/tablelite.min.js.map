{"version":3,"file":"tablelite.min.js","sources":["tablelite/tablelite.js"],"names":["angular","module","directive","$parse","$http","$compile","$filter","$templateCache","$adConfig","adStrapUtils","adDebounce","_link","scope","element","attrs","tableName","items","list","undefined","paging","currentPage","totalPages","pageSize","pageSizes","localConfig","pagingArray","applyFilter","tableModels","mainTemplate","get","loadPage","page","i","start","end","localItems","$eval","localDataSource","predicate","reverse","slice","Math","ceil","length","TOTAL_PAGINATION_ITEMS","minimumBound","floor","push","loadNextPage","loadPreviousPage","loadLastPage","disablePaging","pageSizeChanged","size","sortByColumn","column","sortKey","tableClasses","paginationBtnGroupClasses","replace","columnDefinition","iconClasses","firstPage","previousPage","nextPage","lastPage","sortAscending","sortDescending","sortable","empty","append","$watch","restrict","link"],"mappings":"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","sourcesContent":["angular.module('adaptv.adaptStrap.tablelite', ['adaptv.adaptStrap.utils'])\n/**\n * Use this directive if you need to render a simple table with local data source.\n */\n  .directive('adTableLite', [\n    '$parse', '$http', '$compile', '$filter', '$templateCache', '$adConfig', 'adStrapUtils', 'adDebounce',\n    function ($parse, $http, $compile, $filter, $templateCache, $adConfig, adStrapUtils, adDebounce) {\n      'use strict';\n      function _link(scope, element, attrs) {\n        // We do the name spacing so the if there are multiple adap-table-lite on the scope,\n        // they don't fight with each other.\n        scope[attrs.tableName] = {\n          items: {\n            list: undefined,\n            paging: {\n              currentPage: 1,\n              totalPages: undefined,\n              pageSize: undefined,\n              pageSizes: $parse(attrs.pageSizes)() || [10, 25, 50]\n            }\n          },\n          localConfig: {\n            pagingArray: []\n          },\n          applyFilter: adStrapUtils.applyFilter\n        };\n\n        // ---------- Local data ---------- //\n        var tableModels = scope[attrs.tableName],\n          mainTemplate = $templateCache.get('tablelite/tablelite.tpl.html');\n        tableModels.items.paging.pageSize = tableModels.items.paging.pageSizes[0];\n\n        // ---------- ui handlers ---------- //\n        tableModels.loadPage = adDebounce(function (page) {\n          var start = (page - 1) * tableModels.items.paging.pageSize,\n            end = start + tableModels.items.paging.pageSize,\n            i,\n            startPagingPage,\n            localItems = $filter('orderBy')(\n              scope.$eval(attrs.localDataSource),\n              tableModels.localConfig.predicate,\n              tableModels.localConfig.reverse\n            );\n\n          tableModels.items.list = localItems.slice(start, end);\n          tableModels.items.paging.currentPage = page;\n          tableModels.items.paging.totalPages = Math.ceil(\n              scope.$eval(attrs.localDataSource).length /\n              tableModels.items.paging.pageSize\n          );\n          tableModels.localConfig.pagingArray = [];\n          var TOTAL_PAGINATION_ITEMS = 5;\n          var minimumBound = page - Math.floor(TOTAL_PAGINATION_ITEMS / 2);\n          for (i = minimumBound; i <= page; i++) {\n            if (i > 0) {\n              tableModels.localConfig.pagingArray.push(i);\n            }\n          }\n          while (tableModels.localConfig.pagingArray.length < TOTAL_PAGINATION_ITEMS) {\n            if (i > tableModels.items.paging.totalPages) {\n              break;\n            }\n            tableModels.localConfig.pagingArray.push(i);\n            i++;\n          }\n        });\n\n        tableModels.loadNextPage = function () {\n          if (tableModels.items.paging.currentPage + 1 <= tableModels.items.paging.totalPages) {\n            tableModels.loadPage(tableModels.items.paging.currentPage + 1);\n          }\n        };\n\n        tableModels.loadPreviousPage = function () {\n          if (tableModels.items.paging.currentPage - 1 > 0) {\n            tableModels.loadPage(tableModels.items.paging.currentPage - 1);\n          }\n        };\n\n        tableModels.loadLastPage = function () {\n          if (!tableModels.localConfig.disablePaging) {\n            tableModels.loadPage(tableModels.items.paging.totalPages);\n          }\n        };\n\n        tableModels.pageSizeChanged = function (size) {\n          tableModels.items.paging.pageSize = size;\n          tableModels.loadPage(1);\n        };\n\n        tableModels.sortByColumn = function (column) {\n          if (column.sortKey) {\n            if (column.sortKey !== tableModels.localConfig.predicate) {\n              tableModels.localConfig.predicate = column.sortKey;\n              tableModels.localConfig.reverse = true;\n            } else {\n              if (tableModels.localConfig.reverse === true) {\n                tableModels.localConfig.reverse = false;\n              } else {\n                tableModels.localConfig.reverse = undefined;\n                tableModels.localConfig.predicate = undefined;\n              }\n            }\n            tableModels.loadPage(tableModels.items.paging.currentPage);\n          }\n        };\n\n        // ---------- initialization and event listeners ---------- //\n        //We do the compile after injecting the name spacing into the template.\n        tableModels.loadPage(1);\n        attrs.tableClasses = attrs.tableClasses || 'table';\n        attrs.paginationBtnGroupClasses = attrs.paginationBtnGroupClasses || 'btn-group btn-group-sm';\n        mainTemplate = mainTemplate.\n          replace(/%=tableName%/g, attrs.tableName).\n          replace(/%=columnDefinition%/g, attrs.columnDefinition).\n          replace(/%=paginationBtnGroupClasses%/g, attrs.paginationBtnGroupClasses).\n          replace(/%=tableClasses%/g, attrs.tableClasses).\n          replace(/%=icon-firstPage%/g, $adConfig.iconClasses.firstPage).\n          replace(/%=icon-previousPage%/g, $adConfig.iconClasses.previousPage).\n          replace(/%=icon-nextPage%/g, $adConfig.iconClasses.nextPage).\n          replace(/%=icon-lastPage%/g, $adConfig.iconClasses.lastPage).\n          replace(/%=icon-sortAscending%/g, $adConfig.iconClasses.sortAscending).\n          replace(/%=icon-sortDescending%/g, $adConfig.iconClasses.sortDescending).\n          replace(/%=icon-sortable%/g, $adConfig.iconClasses.sortable)\n        ;\n        element.empty();\n        element.append($compile(mainTemplate)(scope));\n\n        scope.$watch(attrs.localDataSource, function () {\n          tableModels.loadPage(1);\n        }, true);\n      }\n\n      return {\n        restrict: 'E',\n        link: _link\n      };\n    }]);\n"],"sourceRoot":"/source/"}