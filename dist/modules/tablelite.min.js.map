{"version":3,"file":"tablelite.min.js","sources":["tablelite/tablelite.js"],"names":["angular","module","provider","defaults","this","expandIconClass","collapseIconClass","loadingIconClass","$get","settings","directive","$parse","$http","$compile","$filter","$templateCache","adStrapUtils","_link","scope","element","attrs","tableName","items","list","undefined","paging","currentPage","totalPages","pageSize","pageSizes","localConfig","pagingArray","applyFilter","tableModels","mainTemplate","get","loadPage","page","i","startPagingPage","start","end","localItems","$eval","localDataSource","predicate","reverse","slice","Math","ceil","length","push","loadNextPage","loadPreviousPage","loadLastPage","disablePaging","pageSizeChanged","size","sortByColumn","column","sortable","displayProperty","tableClasses","paginationBtnGroupClasses","replace","columnDefinition","html","restrict","link"],"mappings":"AAOAA,QAAQC,OAAO,kCAAmCC,SAAS,aAAc,WACvE,GAAIC,GAAWC,KAAKD,UAChBE,gBAAiB,gCACjBC,kBAAmB,iCACnBC,iBAAkB,sCAEtBH,MAAKI,KAAO,WACV,OAASC,SAAUN,MAEpBO,UAAU,eACX,SACA,QACA,WACA,UACA,iBACA,eACA,SAAUC,EAAQC,EAAOC,EAAUC,EAASC,EAAgBC,GAC1D,YACA,SAASC,GAAMC,EAAOC,EAASC,GAG7BF,EAAME,EAAMC,YACVC,OACEC,KAAMC,OACNC,QACEC,YAAa,EACbC,WAAYH,OACZI,SAAUJ,OACVK,UAAWlB,EAAOS,EAAMS,eACtB,GACA,GACA,MAINC,aAAeC,gBACfC,YAAahB,EAAagB,YAG5B,IAAIC,GAAcf,EAAME,EAAMC,WAAYa,EAAenB,EAAeoB,IAAI,+BAC5EF,GAAYX,MAAMG,OAAOG,SAAWK,EAAYX,MAAMG,OAAOI,UAAU,GAEvEI,EAAYG,SAAW,SAAUC,GAC/B,GAA6GC,GAAGC,EAA5GC,GAASH,EAAO,GAAKJ,EAAYX,MAAMG,OAAOG,SAAUa,EAAMD,EAAQP,EAAYX,MAAMG,OAAOG,SAA8Bc,EAAa5B,EAAQ,WAAWI,EAAMyB,MAAMvB,EAAMwB,iBAAkBX,EAAYH,YAAYe,UAAWZ,EAAYH,YAAYgB,QAMhQ,KALAb,EAAYX,MAAMC,KAAOmB,EAAWK,MAAMP,EAAOC,GACjDR,EAAYX,MAAMG,OAAOC,YAAcW,EACvCJ,EAAYX,MAAMG,OAAOE,WAAaqB,KAAKC,KAAK/B,EAAMyB,MAAMvB,EAAMwB,iBAAiBM,OAASjB,EAAYX,MAAMG,OAAOG,UACrHK,EAAYH,YAAYC,eACxBQ,EAAkBS,KAAKC,KAAKZ,EAAOJ,EAAYX,MAAMG,OAAOG,UAAYK,EAAYX,MAAMG,OAAOG,UAAYK,EAAYX,MAAMG,OAAOG,SAAW,GAC5IU,EAAI,EAAO,EAAJA,EAAOA,IACbC,EAAkBD,EAAI,GAAKC,EAAkBD,GAAKL,EAAYX,MAAMG,OAAOE,YAC7EM,EAAYH,YAAYC,YAAYoB,KAAKZ,EAAkBD,IAIjEL,EAAYmB,aAAe,WACrBnB,EAAYX,MAAMG,OAAOC,YAAc,GAAKO,EAAYX,MAAMG,OAAOE,YACvEM,EAAYG,SAASH,EAAYX,MAAMG,OAAOC,YAAc,IAGhEO,EAAYoB,iBAAmB,WACzBpB,EAAYX,MAAMG,OAAOC,YAAc,EAAI,GAC7CO,EAAYG,SAASH,EAAYX,MAAMG,OAAOC,YAAc,IAGhEO,EAAYqB,aAAe,WACpBrB,EAAYH,YAAYyB,eAC3BtB,EAAYG,SAASH,EAAYX,MAAMG,OAAOE,aAGlDM,EAAYuB,gBAAkB,SAAUC,GACtCxB,EAAYX,MAAMG,OAAOG,SAAW6B,EACpCxB,EAAYG,SAAS,IAEvBH,EAAYyB,aAAe,SAAUC,GAC/BA,EAAOC,WACT3B,EAAYH,YAAYe,UAAYc,EAAOE,gBAC3C5B,EAAYH,YAAYgB,SAAWb,EAAYH,YAAYgB,QAC3Db,EAAYG,SAASH,EAAYX,MAAMG,OAAOC,eAKlDO,EAAYG,SAAS,GACrBhB,EAAM0C,aAAe1C,EAAM0C,cAAgB,QAC3C1C,EAAM2C,0BAA4B3C,EAAM2C,2BAA6B,yBACrE7B,EAAeA,EAAa8B,QAAQ,gBAAiB5C,EAAMC,WAAW2C,QAAQ,uBAAwB5C,EAAM6C,kBAAkBD,QAAQ,gCAAiC5C,EAAM2C,2BAA2BC,QAAQ,mBAAoB5C,EAAM0C,cAC1O9D,QAAQmB,QAAQA,GAAS+C,KAAKrD,EAASqB,GAAchB,IAEvD,OACEiD,SAAU,IACVC,KAAMnD","sourcesContent":["angular.module('adaptv.adaptStrap.tablelite', [])\n  .provider('$tablelite', function () {\n    var defaults = this.defaults = {\n      expandIconClass: 'glyphicon glyphicon-plus-sign',\n      collapseIconClass: 'glyphicon glyphicon-minus-sign',\n      loadingIconClass: 'glyphicon glyphicon-refresh ad-spin'\n    };\n    this.$get = function () {\n      return {\n        settings: defaults\n      };\n    };\n  })\n\n/**\n * Use this directive if you need to render a simple table with local data source.\n */\n  .directive('adTableLite', ['$parse', '$http', '$compile', '$filter', '$templateCache', 'adStrapUtils',\n    function ($parse, $http, $compile, $filter, $templateCache, adStrapUtils) {\n      'use strict';\n      function _link(scope, element, attrs) {\n        // We do the name spacing so the if there are multiple adap-table-lite on the scope,\n        // they don't fight with each other.\n        scope[attrs.tableName] = {\n          items: {\n            list: undefined,\n            paging: {\n              currentPage: 1,\n              totalPages: undefined,\n              pageSize: undefined,\n              pageSizes: $parse(attrs.pageSizes)() || [10, 25, 50]\n            }\n          },\n          localConfig: {\n            pagingArray: []\n          },\n          applyFilter: adStrapUtils.applyFilter\n        };\n\n        // ---------- Local data ---------- //\n        var tableModels = scope[attrs.tableName],\n          mainTemplate = $templateCache.get('tablelite/tablelite.tpl.html');\n        tableModels.items.paging.pageSize = tableModels.items.paging.pageSizes[0];\n\n        // ---------- ui handlers ---------- //\n        tableModels.loadPage = function (page) {\n          var start = (page - 1) * tableModels.items.paging.pageSize,\n            end = start + tableModels.items.paging.pageSize,\n            i,\n            startPagingPage,\n            localItems = $filter('orderBy')(\n              scope.$eval(attrs.localDataSource),\n              tableModels.localConfig.predicate,\n              tableModels.localConfig.reverse\n            );\n\n          tableModels.items.list = localItems.slice(start, end);\n          tableModels.items.paging.currentPage = page;\n          tableModels.items.paging.totalPages = Math.ceil(\n              scope.$eval(attrs.localDataSource).length /\n              tableModels.items.paging.pageSize\n          );\n          tableModels.localConfig.pagingArray = [];\n          startPagingPage = ((Math.ceil(page / tableModels.items.paging.pageSize) *\n            tableModels.items.paging.pageSize) - (tableModels.items.paging.pageSize - 1));\n          for (i = 0; i < 5; i++) {\n            if (startPagingPage + i > 0 && startPagingPage + i <= tableModels.items.paging.totalPages) {\n              tableModels.localConfig.pagingArray.push(startPagingPage + i);\n            }\n          }\n\n        };\n\n        tableModels.loadNextPage = function () {\n          if (tableModels.items.paging.currentPage + 1 <= tableModels.items.paging.totalPages) {\n            tableModels.loadPage(tableModels.items.paging.currentPage + 1);\n          }\n        };\n\n        tableModels.loadPreviousPage = function () {\n          if (tableModels.items.paging.currentPage - 1 > 0) {\n            tableModels.loadPage(tableModels.items.paging.currentPage - 1);\n          }\n        };\n\n        tableModels.loadLastPage = function () {\n          if (!tableModels.localConfig.disablePaging) {\n            tableModels.loadPage(tableModels.items.paging.totalPages);\n          }\n        };\n\n        tableModels.pageSizeChanged = function (size) {\n          tableModels.items.paging.pageSize = size;\n          tableModels.loadPage(1);\n        };\n\n        tableModels.sortByColumn = function (column) {\n          if (column.sortable) {\n            tableModels.localConfig.predicate = column.displayProperty;\n            tableModels.localConfig.reverse = !tableModels.localConfig.reverse;\n            tableModels.loadPage(tableModels.items.paging.currentPage);\n          }\n        };\n\n        // ---------- initialization and event listeners ---------- //\n        //We do the compile after injecting the name spacing into the template.\n        tableModels.loadPage(1);\n\n        attrs.tableClasses = attrs.tableClasses || 'table';\n        attrs.paginationBtnGroupClasses = attrs.paginationBtnGroupClasses || 'btn-group btn-group-sm';\n        mainTemplate = mainTemplate.replace(/%=tableName%/g, attrs.tableName).\n          replace(/%=columnDefinition%/g, attrs.columnDefinition).\n          replace(/%=paginationBtnGroupClasses%/g, attrs.paginationBtnGroupClasses).\n          replace(/%=tableClasses%/g, attrs.tableClasses);\n        angular.element(element).html($compile(mainTemplate)(scope));\n      }\n\n      return {\n        restrict: 'E',\n        link: _link\n      };\n    }]);\n"],"sourceRoot":"/source/"}